[{"C:\\Users\\Administrador\\Documents\\OLX Clone root\\frontend\\src\\index.js":"1","C:\\Users\\Administrador\\Documents\\OLX Clone root\\frontend\\src\\App.js":"2","C:\\Users\\Administrador\\Documents\\OLX Clone root\\frontend\\src\\Reducers.js":"3","C:\\Users\\Administrador\\Documents\\OLX Clone root\\frontend\\src\\reducers\\userReducer.js":"4","C:\\Users\\Administrador\\Documents\\OLX Clone root\\frontend\\src\\Routes.js":"5","C:\\Users\\Administrador\\Documents\\OLX Clone root\\frontend\\src\\Pages\\Home\\index.js":"6","C:\\Users\\Administrador\\Documents\\OLX Clone root\\frontend\\src\\Pages\\About\\index.js":"7","C:\\Users\\Administrador\\Documents\\OLX Clone root\\frontend\\src\\components\\MainComponents.js":"8","C:\\Users\\Administrador\\Documents\\OLX Clone root\\frontend\\src\\components\\partials\\Header\\index.js":"9","C:\\Users\\Administrador\\Documents\\OLX Clone root\\frontend\\src\\components\\partials\\Header\\styled.js":"10","C:\\Users\\Administrador\\Documents\\OLX Clone root\\frontend\\src\\components\\partials\\Footer\\index.js":"11","C:\\Users\\Administrador\\Documents\\OLX Clone root\\frontend\\src\\components\\partials\\Footer\\styled.js":"12","C:\\Users\\Administrador\\Documents\\OLX Clone root\\frontend\\src\\helpers\\AuthHandler.js":"13","C:\\Users\\Administrador\\Documents\\OLX Clone root\\frontend\\src\\Pages\\404\\index.js":"14","C:\\Users\\Administrador\\Documents\\OLX Clone root\\frontend\\src\\Pages\\SignIn\\index.js":"15","C:\\Users\\Administrador\\Documents\\OLX Clone root\\frontend\\src\\Pages\\SignIn\\styled.js":"16","C:\\Users\\Administrador\\Documents\\OLX Clone root\\frontend\\src\\helpers\\OlxAPI.js":"17","C:\\Users\\Administrador\\Documents\\OLX Clone root\\frontend\\src\\Pages\\SignUp\\index.js":"18","C:\\Users\\Administrador\\Documents\\OLX Clone root\\frontend\\src\\Pages\\SignUp\\styled.js":"19","C:\\Users\\Administrador\\Documents\\OLX Clone root\\frontend\\src\\Pages\\Home\\styled.js":"20","C:\\Users\\Administrador\\Documents\\OLX Clone root\\frontend\\src\\components\\partials\\AdItem\\index.js":"21","C:\\Users\\Administrador\\Documents\\OLX Clone root\\frontend\\src\\components\\partials\\AdItem\\styled.js":"22"},{"size":347,"mtime":1626201507643,"results":"23","hashOfConfig":"24"},{"size":745,"mtime":1626205583542,"results":"25","hashOfConfig":"24"},{"size":156,"mtime":1626201335779,"results":"26","hashOfConfig":"24"},{"size":235,"mtime":1626201912203,"results":"27","hashOfConfig":"24"},{"size":830,"mtime":1626283790797,"results":"28","hashOfConfig":"24"},{"size":3990,"mtime":1626868275413,"results":"29","hashOfConfig":"24"},{"size":290,"mtime":1626203484272,"results":"30","hashOfConfig":"24"},{"size":447,"mtime":1626792029772,"results":"31","hashOfConfig":"24"},{"size":2133,"mtime":1626810024902,"results":"32","hashOfConfig":"24"},{"size":1544,"mtime":1626810322094,"results":"33","hashOfConfig":"24"},{"size":204,"mtime":1626205427009,"results":"34","hashOfConfig":"24"},{"size":134,"mtime":1626205361983,"results":"35","hashOfConfig":"24"},{"size":422,"mtime":1626355257115,"results":"36","hashOfConfig":"24"},{"size":291,"mtime":1626264515741,"results":"37","hashOfConfig":"24"},{"size":3523,"mtime":1626802762835,"results":"38","hashOfConfig":"24"},{"size":1232,"mtime":1626283547295,"results":"39","hashOfConfig":"24"},{"size":2467,"mtime":1626866286158,"results":"40","hashOfConfig":"24"},{"size":5466,"mtime":1626803211118,"results":"41","hashOfConfig":"24"},{"size":1236,"mtime":1626791997126,"results":"42","hashOfConfig":"24"},{"size":2591,"mtime":1626867237560,"results":"43","hashOfConfig":"24"},{"size":528,"mtime":1627397236662,"results":"44","hashOfConfig":"24"},{"size":369,"mtime":1626868061721,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"i5und0",{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"48"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"48"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"48"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"48"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"93","messages":"94","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"C:\\Users\\Administrador\\Documents\\OLX Clone root\\frontend\\src\\index.js",[],["97","98"],"C:\\Users\\Administrador\\Documents\\OLX Clone root\\frontend\\src\\App.js",[],"C:\\Users\\Administrador\\Documents\\OLX Clone root\\frontend\\src\\Reducers.js",[],"C:\\Users\\Administrador\\Documents\\OLX Clone root\\frontend\\src\\reducers\\userReducer.js",["99"],"const initialState = {\r\n    email: ''\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n    \r\n    if(action.type === 'SET_EMAIL') {\r\n        return { ...state, email: action.payload.email }\r\n    }\r\n    \r\n    return state;\r\n\r\n}","C:\\Users\\Administrador\\Documents\\OLX Clone root\\frontend\\src\\Routes.js",["100"],"import React from 'react';\r\nimport { Switch, Route } from 'react-router-dom';\r\n\r\nimport Home from './Pages/Home';\r\nimport About from './Pages/About';\r\nimport NotFound from './Pages/404';\r\nimport SignIn from './Pages/SignIn';\r\nimport SignUp from './Pages/SignUp';\r\n\r\nexport default () => {\r\n    return ( \r\n        <Switch>\r\n\r\n            <Route exact path=\"/\">\r\n                <Home />\r\n            </Route>\r\n\r\n            \r\n            <Route exact path=\"/about\">\r\n                <About />\r\n            </Route>\r\n\r\n            <Route exact path=\"/signin\">\r\n                <SignIn />\r\n            </Route>\r\n            \r\n            <Route exact path=\"/signup\">\r\n                <SignUp />\r\n            </Route>\r\n            \r\n            <Route>\r\n                <NotFound/>\r\n            </Route>\r\n\r\n        </Switch>\r\n    )\r\n}","C:\\Users\\Administrador\\Documents\\OLX Clone root\\frontend\\src\\Pages\\Home\\index.js",["101","102","103","104","105","106","107","108"],"import { React, useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { PageArea, SearchArea } from './styled';\r\nimport { PageContainer, PageTitle, ErrorMessage } from '../../components/MainComponents';\r\nimport  AdItem  from '../../components/partials/AdItem';\r\nimport useApi from '../../helpers/OlxAPI'\r\nimport { doLogin } from '../../helpers/AuthHandler';\r\nimport { set } from 'js-cookie';\r\n\r\nconst Page = () => {\r\n    const api = useApi();\r\n\r\n    const [stateList, setStateList] = useState([]);\r\n    const [categories, setCategories] = useState([]);\r\n    const [ads, setAds] = useState([]);\r\n\r\n    useEffect(() => {\r\n\r\n        const getStates = async () => {\r\n            const sList = await api.getStates();\r\n\r\n            setStateList(sList);\r\n        }\r\n\r\n        getStates();\r\n\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n\r\n        const getCategories = async () => {\r\n            const cats = await api.getCategories();\r\n\r\n            setCategories(cats);\r\n        }\r\n\r\n        getCategories();\r\n\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n\r\n        const getRecentAds = async () => {\r\n            const json = await api.getAds({\r\n                sort:'desc',\r\n                limit:8\r\n            }); \r\n            setAds(json.ads)\r\n        }\r\n\r\n        getRecentAds();\r\n\r\n    }, []);\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            <SearchArea>\r\n                <PageContainer>\r\n                    <div className=\"searchBox\">\r\n                        <form method=\"GET\" action=\"/ads\">\r\n                            <input type=\"text\" name=\"q\" placeholder=\"O que você procura?\" />\r\n                            <select>\r\n                                <option></option>\r\n                                {stateList &&\r\n                                    stateList.map((i, k) =>\r\n                                        <option key={k} value={i.name}>{i.name}</option>\r\n                                    )\r\n                                }\r\n                            </select>\r\n                            <button>Pesquisar</button>\r\n                        </form>\r\n                    </div>\r\n                    <div className=\"categoryList\">\r\n                        {categories &&\r\n                            categories.map((i, k) =>\r\n\r\n                                <Link key={k} to={`/ads?cat=${i.name}`} className=\"categoryItem\">\r\n                                    <div className=\"circle\">\r\n                                        <img src={i.img} alt=\"\" />\r\n                                    </div>\r\n                                    <span>{i.name}</span>\r\n                                </Link>\r\n\r\n                            )\r\n                        }\r\n                    </div>\r\n                </PageContainer>\r\n            </SearchArea>\r\n\r\n            <PageContainer>\r\n                <PageArea>\r\n                        <h2>Anúncios Recentes</h2>\r\n                        <div className=\"list\">\r\n                            {ads &&\r\n                                ads.map((i,k) => {\r\n                                    <AdItem key={k} data={i} />\r\n                                })\r\n                            }\r\n                        </div>\r\n                \r\n                        <Link to=\"/ads\" className=\"seeAllLink\">Veja todos os links</Link>\r\n                            \r\n                        <hr />\r\n                        \r\n                        \"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\"\r\n                </PageArea> \r\n            </PageContainer>\r\n        </>\r\n    );\r\n\r\n}\r\n\r\nexport default Page;","C:\\Users\\Administrador\\Documents\\OLX Clone root\\frontend\\src\\Pages\\About\\index.js",[],"C:\\Users\\Administrador\\Documents\\OLX Clone root\\frontend\\src\\components\\MainComponents.js",[],"C:\\Users\\Administrador\\Documents\\OLX Clone root\\frontend\\src\\components\\partials\\Header\\index.js",[],"C:\\Users\\Administrador\\Documents\\OLX Clone root\\frontend\\src\\components\\partials\\Header\\styled.js",[],"C:\\Users\\Administrador\\Documents\\OLX Clone root\\frontend\\src\\components\\partials\\Footer\\index.js",[],"C:\\Users\\Administrador\\Documents\\OLX Clone root\\frontend\\src\\components\\partials\\Footer\\styled.js",[],"C:\\Users\\Administrador\\Documents\\OLX Clone root\\frontend\\src\\helpers\\AuthHandler.js",[],"C:\\Users\\Administrador\\Documents\\OLX Clone root\\frontend\\src\\Pages\\404\\index.js",[],"C:\\Users\\Administrador\\Documents\\OLX Clone root\\frontend\\src\\Pages\\SignIn\\index.js",["109"],"import { React, useState, useEffect } from 'react';\r\nimport { PageArea } from './styled';\r\nimport { PageContainer, PageTitle, ErrorMessage } from '../../components/MainComponents';\r\nimport useApi from '../../helpers/OlxAPI'\r\nimport { doLogin } from '../../helpers/AuthHandler';\r\n\r\nconst Page = () => {\r\n    const api = useApi();\r\n\r\n\r\n    const [password, setPassword] = useState('');\r\n    const [email, setEmail] = useState('');\r\n    const [rememberPassword, setRemeberPassword] = useState('');\r\n    const [disabled, setDisabled] = useState(false);\r\n    const [error, setError] = useState('');\r\n\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        setDisabled(true);\r\n        setError('');\r\n        \r\n        const json = await api.login(email, password);\r\n        \r\n        if(!json[0].name) {\r\n            setError(json)\r\n        } else {\r\n            doLogin(json.token, rememberPassword);\r\n            window.location.href = '/'\r\n        }\r\n        \r\n        setDisabled(false);\r\n    }\r\n\r\n\r\n    return (\r\n        <PageContainer>\r\n            <PageTitle>Login</PageTitle>\r\n            <PageArea>\r\n\r\n                {error &&\r\n                    <ErrorMessage>\r\n                        {error}\r\n                    </ErrorMessage>\r\n                }\r\n\r\n                <form onSubmit={handleSubmit}>\r\n                    <label className=\"area\">\r\n                        <div className=\"area--title\">\r\n                            E-mail\r\n                        </div>\r\n                        <div className=\"area--input\">\r\n                            <input\r\n                                type=\"email\"\r\n                                disabled={disabled}\r\n                                value={email}\r\n                                onChange={e => setEmail(e.target.value)}\r\n                                required\r\n                            />\r\n                        </div>\r\n                    </label>\r\n\r\n                    <label className=\"area\">\r\n                        <div className=\"area--title\"> Senha </div>\r\n                        <div className=\"area--input\">\r\n                            <input\r\n                                type=\"password\"\r\n                                disabled={disabled}\r\n                                value={password}\r\n                                onChange={e => setPassword(e.target.value)}\r\n                                required\r\n                            />\r\n                        </div>\r\n                    </label>\r\n\r\n                    <label className=\"area\">\r\n                        <div className=\"area--title\"> Lembrar Senha </div>\r\n                        <div className=\"area--input\">\r\n                            <input\r\n                                type=\"checkbox\"\r\n                                disabled={disabled}\r\n                                value={rememberPassword}\r\n                                onChange={e => setRemeberPassword(String(e.target.value))}\r\n                            />\r\n                        </div>\r\n                    </label>\r\n\r\n                    <label className=\"area\">\r\n                        <div className=\"area--title\">\r\n                        </div>\r\n                        <div className=\"area--input\">\r\n                            <button disabled={disabled}>Fazer Login</button>\r\n                        </div>\r\n                    </label>\r\n                </form>\r\n            </PageArea>\r\n        </PageContainer>\r\n    );\r\n\r\n}\r\n\r\nexport default Page;","C:\\Users\\Administrador\\Documents\\OLX Clone root\\frontend\\src\\Pages\\SignIn\\styled.js",[],"C:\\Users\\Administrador\\Documents\\OLX Clone root\\frontend\\src\\helpers\\OlxAPI.js",["110","111","112"],"import Cookies from \"js-cookie\";\r\nimport qs from 'qs';\r\n\r\nconst BASEAPI = 'http://localhost:5000';\r\n\r\n\r\nconst apiFetchPost = async(endpoint, body) => {\r\n    if(!body.token){\r\n        let token = Cookies.get('token');\r\n        if(token) {\r\n            body.token = token;\r\n        }\r\n    }\r\n    \r\n    const res = await fetch(BASEAPI+endpoint, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-type': 'application/json'\r\n            },\r\n            body:JSON.stringify(body)\r\n    });\r\n\r\n    const json = await res.json(body);\r\n\r\n    if(json.notallowed){\r\n        window.location.href = \"/\";\r\n        return;\r\n    }\r\n\r\n    return json;\r\n\r\n};\r\n\r\nconst apiFetchGet = async (endpoint, body = []) => {\r\n    if(!body.token){\r\n        let token = Cookies.get('token');\r\n        if(token) {\r\n            body.token = token;\r\n        }\r\n    }\r\n    \r\n    const res  = await fetch(`${BASEAPI+endpoint}?${qs.stringify(body)}`);\r\n    const json = await res.json();\r\n\r\n    if(json.notallowed){\r\n        window.location.href = \"/singin\";\r\n        return;\r\n    }\r\n\r\n    return json;\r\n};\r\n\r\nconst OLXApi = {\r\n    \r\n    login: async(email, password) =>{\r\n        \r\n        const json = await apiFetchGet(\r\n            '/users',\r\n            { email }\r\n        )\r\n\r\n        console.log(json)\r\n\r\n        if (!json[0].email) {\r\n            var error = \"Usuário inexistente\";\r\n            return error;\r\n        }\r\n\r\n        if(json[0].password != password){\r\n            console.log(typeof password)\r\n            var error = \"Senha incorreta!\";\r\n            return error;\r\n        }\r\n\r\n        return json;\r\n    },\r\n\r\n    register:async (name, email, password, stateLoc) => {\r\n        \r\n        const json = await apiFetchPost(\r\n            '/users/',\r\n            {name, email, password, state: stateLoc}\r\n        )\r\n\r\n        return json;\r\n    },\r\n\r\n    getStates: async () => {\r\n        \r\n        const json = await apiFetchGet(\r\n            '/states'\r\n        );\r\n\r\n        return json;\r\n    },\r\n\r\n    getCategories: async () => {\r\n\r\n        const json = await apiFetchGet(\r\n            '/categories'\r\n        );\r\n\r\n        console.log(json);\r\n\r\n        return json;\r\n    },\r\n\r\n\r\n    getAds: async (options) => {\r\n\r\n        const json = await apiFetchGet(\r\n            '/ads',\r\n            options\r\n        );\r\n\r\n        console.log(json);\r\n\r\n        return json;\r\n    }\r\n\r\n}\r\n\r\nexport default () => OLXApi;","C:\\Users\\Administrador\\Documents\\OLX Clone root\\frontend\\src\\Pages\\SignUp\\index.js",["113"],"import { React, useState, useEffect } from 'react';\r\nimport { PageArea } from './styled';\r\nimport { PageContainer, PageTitle, ErrorMessage } from '../../components/MainComponents';\r\nimport useApi from '../../helpers/OlxAPI'\r\nimport { doLogin } from '../../helpers/AuthHandler';\r\n\r\nconst Page = () => {\r\n    const api = useApi();\r\n\r\n    const [name, setName] = useState('');\r\n    const [stateLoc, setStateLoc] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [email, setEmail] = useState('');\r\n    const [confirmPassword, setConfirmPassword] = useState('');\r\n\r\n    const [stateList, setStateList] = useState([]);\r\n\r\n    const [disabled, setDisabled] = useState(false);\r\n    const [error, setError] = useState('');\r\n\r\n    useEffect(() => {\r\n\r\n        const getStates = async () => {\r\n            const sList = await api.getStates();\r\n            console.log(sList);\r\n            console.log(typeof sList);\r\n            console.log('sList');\r\n\r\n            setStateList(sList);\r\n        }\r\n\r\n        getStates();\r\n\r\n    }, []);\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        setDisabled(true);\r\n        setError('');\r\n        \r\n        if (password !== confirmPassword) {\r\n            console.log(\"Senhas diferentes\")\r\n            setError('Senhas diferentes');\r\n            setDisabled(false);\r\n            return;\r\n        }\r\n\r\n        const json = await api.register(name, email, password, stateLoc);\r\n        console.log(json);\r\n         \r\n        if (json.error) {\r\n            setError(json.error)\r\n        } else {\r\n            doLogin(json.token);\r\n            window.location.href = '/'\r\n        }\r\n\r\n        setDisabled(false);\r\n    }\r\n\r\n\r\n    return (\r\n        <PageContainer>\r\n            <PageTitle>Cadastro</PageTitle>\r\n            <PageArea>\r\n                {error &&\r\n                    <ErrorMessage>\r\n                        {error}\r\n                    </ErrorMessage>\r\n                }\r\n                <form onSubmit={handleSubmit}>\r\n                    <label className=\"area\">\r\n                        <div className=\"area--title\">Nome Completo</div>\r\n                        <div className=\"area--input\">\r\n                            <input\r\n                                type=\"text\"\r\n                                disabled={disabled}\r\n                                value={name}\r\n                                onChange={e => setName(e.target.value)}\r\n                                required\r\n                            />\r\n                        </div>\r\n                    </label>\r\n                    <label className=\"area\">\r\n                        <div className=\"area--title\">E-mail</div>\r\n                        <div className=\"area--input\">\r\n                            <input\r\n                                type=\"email\"\r\n                                disabled={disabled}\r\n                                value={email}\r\n                                onChange={e => setEmail(e.target.email)}\r\n                                required\r\n                            />\r\n                        </div>\r\n                    </label>\r\n                    <label className=\"area\">\r\n                        <div className=\"area--title\">Estado</div>\r\n                        <div className=\"area--input\">\r\n                            <select disabled={disabled} value={stateLoc} onChange={e => setStateLoc(e.target.value)} required>\r\n                                <option></option>\r\n                                {stateList &&\r\n                                    stateList.map((i, k) =>\r\n                                        <option key={k} value={i._id}>{i.name}</option>\r\n                                    )\r\n                                }\r\n                            </select>\r\n                        </div>\r\n                    </label>\r\n                    <label className=\"area\">\r\n                        <div className=\"area--title\">Senha</div>\r\n                        <div className=\"area--input\">\r\n                            <input\r\n                                type=\"password\"\r\n                                disabled={disabled}\r\n                                value={password}\r\n                                onChange={e => setPassword(e.target.password)}\r\n                                required\r\n                            />\r\n                        </div>\r\n                    </label>\r\n                    <label className=\"area\">\r\n                        <div className=\"area--title\">Confirmar Senha</div>\r\n                        <div className=\"area--input\">\r\n                            <input\r\n                                type=\"password\"\r\n                                disabled={disabled}\r\n                                value={confirmPassword}\r\n                                onChange={e => setConfirmPassword(e.target.value)}\r\n                                required\r\n                            />\r\n                        </div>\r\n                    </label>\r\n                    <label className=\"area\">\r\n                        <div className=\"area--title\">\r\n                        </div>\r\n                        <div className=\"area--input\">\r\n                            <button disabled={disabled}>Fazer Cadastro</button>\r\n                        </div>\r\n                    </label>\r\n                </form>\r\n            </PageArea>\r\n        </PageContainer>\r\n    );\r\n\r\n}\r\n\r\nexport default Page;","C:\\Users\\Administrador\\Documents\\OLX Clone root\\frontend\\src\\Pages\\SignUp\\styled.js",[],"C:\\Users\\Administrador\\Documents\\OLX Clone root\\frontend\\src\\Pages\\Home\\styled.js",[],"C:\\Users\\Administrador\\Documents\\OLX Clone root\\frontend\\src\\components\\partials\\AdItem\\index.js",["114","115"],"C:\\Users\\Administrador\\Documents\\OLX Clone root\\frontend\\src\\components\\partials\\AdItem\\styled.js",[],{"ruleId":"116","replacedBy":"117"},{"ruleId":"118","replacedBy":"119"},{"ruleId":"120","severity":1,"message":"121","line":5,"column":1,"nodeType":"122","endLine":13,"endColumn":2},{"ruleId":"120","severity":1,"message":"121","line":10,"column":1,"nodeType":"122","endLine":37,"endColumn":2},{"ruleId":"123","severity":1,"message":"124","line":4,"column":25,"nodeType":"125","messageId":"126","endLine":4,"endColumn":34},{"ruleId":"123","severity":1,"message":"127","line":4,"column":36,"nodeType":"125","messageId":"126","endLine":4,"endColumn":48},{"ruleId":"123","severity":1,"message":"128","line":7,"column":10,"nodeType":"125","messageId":"126","endLine":7,"endColumn":17},{"ruleId":"123","severity":1,"message":"129","line":8,"column":10,"nodeType":"125","messageId":"126","endLine":8,"endColumn":13},{"ruleId":"130","severity":1,"message":"131","line":27,"column":8,"nodeType":"132","endLine":27,"endColumn":10,"suggestions":"133"},{"ruleId":"130","severity":1,"message":"131","line":39,"column":8,"nodeType":"132","endLine":39,"endColumn":10,"suggestions":"134"},{"ruleId":"130","severity":1,"message":"131","line":53,"column":8,"nodeType":"132","endLine":53,"endColumn":10,"suggestions":"135"},{"ruleId":"136","severity":1,"message":"137","line":97,"column":47,"nodeType":"138","messageId":"139","endLine":97,"endColumn":49},{"ruleId":"123","severity":1,"message":"140","line":1,"column":27,"nodeType":"125","messageId":"126","endLine":1,"endColumn":36},{"ruleId":"141","severity":1,"message":"142","line":70,"column":29,"nodeType":"143","messageId":"144","endLine":70,"endColumn":31},{"ruleId":"145","severity":1,"message":"146","line":72,"column":17,"nodeType":"125","messageId":"147","endLine":72,"endColumn":22},{"ruleId":"120","severity":1,"message":"121","line":124,"column":1,"nodeType":"122","endLine":124,"endColumn":29},{"ruleId":"130","severity":1,"message":"131","line":34,"column":8,"nodeType":"132","endLine":34,"endColumn":10,"suggestions":"148"},{"ruleId":"120","severity":1,"message":"121","line":5,"column":1,"nodeType":"122","endLine":20,"endColumn":2},{"ruleId":"149","severity":1,"message":"150","line":10,"column":21,"nodeType":"151","endLine":10,"endColumn":51},"no-native-reassign",["152"],"no-negated-in-lhs",["153"],"import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","no-unused-vars","'PageTitle' is defined but never used.","Identifier","unusedVar","'ErrorMessage' is defined but never used.","'doLogin' is defined but never used.","'set' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'api'. Either include it or remove the dependency array.","ArrayExpression",["154"],["155"],["156"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'useEffect' is defined but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","no-redeclare","'error' is already defined.","redeclared",["157"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation",{"desc":"158","fix":"159"},{"desc":"158","fix":"160"},{"desc":"158","fix":"161"},{"desc":"158","fix":"162"},"Update the dependencies array to be: [api]",{"range":"163","text":"164"},{"range":"165","text":"164"},{"range":"166","text":"164"},{"range":"167","text":"164"},[825,827],"[api]",[1040,1042],[1312,1314],[1049,1051]]